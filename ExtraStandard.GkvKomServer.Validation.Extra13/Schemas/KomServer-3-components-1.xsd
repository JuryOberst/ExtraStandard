<?xml version="1.0" encoding="UTF-8"?>
<!--
	@author  Oliver Staudt, ITSG GmbH
    @version 1.3.0
    @state   RELEASE
    @date    2012-02-06
    @changed 2012-02-06 Profiled for GKV-Kommunikationsserver

    Schema module describing shared eXTra components
    
    @file    KomServer-1-components-1.xsd
    @author  [MS] Michael Schäfer, Statistisches Bundesamt
    @version 1.3.0
    @state   RELEASE
    @date    2011-09-12
    
    @changed 2009-07-17 1.1 MS - Removed XHTML namespace
    @changed 2010-02-21 MS + Added version '1.2'
    @changed 2010-07-04 MS / Restricted version identifier to '1.2'
    @changed 2010-07-12 MS / Made 'ResponseDetailsType' non-abstract
    @changed 2011-06-17 MS / Changed type of element 'DataType' to 'xcode:DataTypeCodeType'
    @changed 2010-09-12 1.3 MS - Added values '1.0', 1.1', 1.3'
    @changed 2011-09-12 1.3 MS / Set schema version to 1.3
    
-->
<xs:schema xmlns="http://www.extra-standard.de/namespace/components/1" xmlns:xcode="http://www.extra-standard.de/namespace/codelists/1" xmlns:xplg="http://www.extra-standard.de/namespace/plugins/1" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.extra-standard.de/namespace/components/1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.3.0">
	<!-- Import eXTra code lists -->
	<xs:import namespace="http://www.extra-standard.de/namespace/codelists/1" schemaLocation="KomServer-3-codelists-1.xsd"/>
	<!-- Import eXTra plug-ins -->
	<xs:import namespace="http://www.extra-standard.de/namespace/plugins/1" schemaLocation="KomServer-3-plugins-1.xsd"/>
	<!-- Import XML Signature namespace -->
	<xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
	<!-- Simple content types -->
	<xs:include schemaLocation="KomServer-components-1-common.xsd"/>
	<xs:simpleType name="AbstractVersionType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[1-9][0-9]*.[0-9]+"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- @changed 2009-09-09 1.1 MS + Added value '1.1'
         @changed 2010-02-21 1.2 MS + Added value '1.2'
         @changed 2010-07-04 1.2 MS - Removed values < '1.2'
         @changed 2010-09-12 1.3 MS - Added values '1.0', 1.1', 1.3'
    -->
	<xs:simpleType name="SupportedVersionsType">
		<xs:restriction base="AbstractVersionType">
			<xs:enumeration value="1.3"/>
			<!-- @deleted 2010-07-04 1.2 MS
                @{code %
                <xs:enumeration value="1.0"/>
                <xs:enumeration value="1.1"/>
                %}
            -->
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ProfileIDType">
		<xs:restriction base="SimpleURIencodableType"/>
	</xs:simpleType>
	<xs:simpleType name="ScenarioType">
		<xs:annotation>
			<xs:documentation>
                Any valid URI is permitted to indicate the choosen scenario. However, it is
                recommended to use one of following predefined values:
                - http://www.extra-standard.de/scenario/fire-and-forget
                - http://www.extra-standard.de/scenario/request-with-response
                - http://www.extra-standard.de/scenario/request-with-acknowlegdement
                Each of these values may be extended by appending a '#' character and any
                URI compatible value to it, such as in:
                - http://www.extra-standard.de/scenario/request-with-response#noSig
            </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xcode:ScenarioCodeType"/>
	</xs:simpleType>
	<xs:simpleType name="ProcessIDType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="SimpleIDType">
		<xs:restriction base="xs:token"/>
	</xs:simpleType>
	<xs:simpleType name="SimpleTypeType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="SimpleStringType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:complexType name="PropertyType">
		<xs:simpleContent>
			<xs:extension base="SimpleStringType">
				<xs:attribute name="type" type="xcode:XSDPrefixedTypeCodes" default="xs:string"/>
				<xs:attribute name="name" type="xs:token"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="ClassifiableStringType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="class" type="SimpleClassType" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="SimpleURIencodableType">
		<xs:restriction base="xs:anyURI"/>
	</xs:simpleType>
	<xs:complexType name="FlagCodeType">
		<xs:simpleContent>
			<xs:extension base="xs:string"/>
		</xs:simpleContent>
	</xs:complexType>
	<!-- Complex content types -->
	<!-- @deleted 2010-07-04 1.2 MS
         @{code %
        <xs:complexType name="ElementWithVersionType" abstract="true">
            <xs:attribute name="version" type="SupportedVersionsType" use="required"/>
        </xs:complexType>
        %}         
    -->
	<!-- @changed 2010-07-04 1.2 MS / Type of version changed from SupportedVersionsType
                                      to AbstractVersionType
        @{code %
        <xs:complexType name="ElementWithOptionalVersionType" abstract="true">
            <xs:attribute name="version" type="SupportedVersionsType" use="optional"/>
        </xs:complexType>
        %}         
    -->
	<xs:complexType name="ElementWithOptionalVersionType" abstract="true">
		<xs:attribute name="version" type="AbstractVersionType" use="optional"/>
	</xs:complexType>
	<xs:complexType name="ElementWithOutOptionalVersionType" abstract="true">
		<xs:complexContent>
			<xs:restriction base="ElementWithOptionalVersionType">
				<xs:attribute name="version" type="AbstractVersionType" use="prohibited"/>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<!-- @changed 2010-07-04 1.2 MS - Removed dependency on ElementWithVersionType
        @{code %
        <xs:complexType name="RootElementType" abstract="true">
            <xs:complexContent>
                <xs:extension base="ElementWithVersionType">
                    <xs:attribute name="profile" type="ProfileIDType" use="required"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        %}         
    -->
	<xs:complexType name="RootElementType" abstract="true">
		<xs:attribute name="version" type="SupportedVersionsType" use="required">
			<xs:annotation>
				<xs:documentation>Wert entspricht der zugrundeliegenden eXtra-Basis Versionsnummer.
</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="profile" use="required">
			<xs:annotation>
				<xs:documentation>Die Festlegung des Wertes erfolgt durch die Registrierung bei der AWV eXtra.
</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="ProfileIDType">
					<xs:enumeration value="http://www.extra-standard.de/profile/DEUEVGKV/1.3"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ApplicationType">
		<xs:sequence>
			<xs:element ref="Product">
				<xs:annotation>
					<xs:documentation>Element enthält den Namen der Software, mit der die Nutzdaten erzeugt werden. 
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="Manufacturer">
				<xs:annotation>
					<xs:documentation>Element enthält den Namen des Herstellers der Software, mit der die Nutzdaten erzeugt werden
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="RegistrationID" minOccurs="0" maxOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SenderType">
		<xs:sequence>
			<xs:element ref="SenderID">
				<xs:annotation>
					<xs:documentation>Betriebsnummer des Absenders, z.B. “23456789”.
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="Name" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TransportRequestDetailsType">
		<xs:complexContent>
			<xs:restriction base="RequestDetailsType">
				<xs:sequence>
					<xs:element ref="RequestID">
						<xs:annotation>
							<xs:documentation>Eindeutige ID, welche der Sender festlegen muss
</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="TimeStamp">
						<xs:annotation>
							<xs:documentation>Zeitstempel sind für die Dokumentation einer Datenübermittlung von zentraler Bedeutung und daher an vielen Stellen des eXTra Protokolls Pflicht, z.B. „2008-10-30T15:09:00“ oder „2008-10-30T14:09:00Z“.
</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="Application">
						<xs:annotation>
							<xs:documentation>Application dient dazu, die zur Erstellung einer eXTra Nachricht verwendete Softwareanwendung für Dokumentationszwecke zu beschreiben.
</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Procedure" type="ProcedureDeliveryServerType"/>
					<xs:element ref="DataType">
						<xs:annotation>
							<xs:documentation>DataType dient zur Angabe einer Art-, Typ- oder sonstigen kategorisierenden oder beschreibenden Angabe über die übermittelten Daten. Ein häufiger Fall ist z.B. die formale Bezeichnung eines Datensatzes oder einer Datei.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="Scenario" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Dieses Element beschreibt das Request Kommunikationsszenario. Der erlaubten Wert wurde auf "request-with-acknoledgement" reduziert.
</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PackageRequestDetailsType">
		<xs:complexContent>
			<xs:restriction base="RequestDetailsType">
				<xs:sequence>
					<xs:element ref="RequestID"/>
					<xs:element ref="TimeStamp" minOccurs="0"/>
					<xs:element ref="Application" minOccurs="0" maxOccurs="0"/>
					<xs:element name="Procedure" type="ProcedureType"/>
					<xs:element ref="DataType" minOccurs="0" maxOccurs="0"/>
					<xs:element ref="Scenario" minOccurs="0"/>
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RequestDetailsType">
		<xs:sequence>
			<xs:element ref="RequestID"/>
			<xs:element ref="TimeStamp" minOccurs="0"/>
			<xs:element ref="Application" minOccurs="0"/>
			<xs:element name="Procedure" type="AbstractProcedureType" minOccurs="0"/>
			<xs:element ref="DataType" minOccurs="0"/>
			<xs:element ref="Scenario" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<!-- @changed 2010-07-12 1.2 MS - Removed attribute 'abstract' -->
	<xs:complexType name="ResponseDetailsType">
		<xs:sequence>
			<xs:element ref="ResponseID">
				<xs:annotation>
					<xs:documentation>Eindeutige TrackingID, welche vom GKV-Kommunikationsserver vergeben wird.
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="TimeStamp">
				<xs:annotation>
					<xs:documentation>Zeitstempel sind für die Dokumentation einer Datenübermittlung von zentraler Bedeutung und daher an vielen Stellen des eXTra Protokolls Pflicht, z.B. „2008-10-30T15:09:00“ oder „2008-10-30T14:09:00Z“.
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="Application" minOccurs="0" maxOccurs="0"/>
			<xs:element ref="Report">
				<xs:annotation>
					<xs:documentation>Auf jeder Kommunikationsebene hat ein Empfänger die Möglichkeit, in einer Response für ein Ebenenobjekt einen Bericht über dessen Verarbeitung an den Absender zu übertragen. Der Bericht besteht aus einer Folge von Berichtselementen, sogenannten Flags, von
</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReportType">
		<xs:sequence>
			<xs:element ref="Flag" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Flag beschreibt ein einzelnes Meldungselement (Flag) eines Verarbeitungsprotokolls
</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="highestWeight" use="required">
			<xs:annotation>
				<xs:documentation>Höchstes Gewicht der im Bericht enthaltenen Berichtselemente.
</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xcode:WeightCodeType">
					<xs:pattern value="http://www\.extra-standard\.de/weight/(INFO|ERROR)"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="FlagType">
		<xs:sequence>
			<xs:element ref="Code">
				<xs:annotation>
					<xs:documentation>Code wird verwendet, um xcpt:Flag einen anwendungsspezifischen Code hinzuzufügen.
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="Text">
				<xs:annotation>
					<xs:documentation>Text wird in der Struktur des eXTra Protokolls verwendet, um Texte als ergänzende oder zentrale Information zu übertragen, z.B. in Logs.
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="Stack" minOccurs="0" maxOccurs="0"/>
			<xs:element ref="XPath" minOccurs="0" maxOccurs="0"/>
			<xs:element ref="Originator" minOccurs="0" maxOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="weight" use="required">
			<xs:annotation>
				<xs:documentation>Gewicht des Meldungselementes.
</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xcode:WeightCodeType">
					<xs:pattern value="http://www\.extra-standard\.de/weight/(INFO|ERROR)"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="Base64CharSequenceType">
		<xs:simpleContent>
			<xs:extension base="xs:base64Binary"/>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="AnyXMLType">
		<xs:complexContent>
			<xs:extension base="xs:anyType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="XMLFragmentType">
		<xs:complexContent>
			<xs:extension base="AnyXMLType">
				<xs:attribute name="id" type="xs:string" use="optional"/>
				<xs:attribute name="xpath" type="xs:string" use="optional"/>
				<xs:attribute name="documentReference" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CharSequenceType">
		<xs:simpleContent>
			<xs:extension base="xs:string"/>
		</xs:simpleContent>
	</xs:complexType>
	<!-- ElementSequenceType
        @changed 2009-05-05 MS / Set attribute 'processContents' to 'lax'
    -->
	<xs:complexType name="ElementSequenceType">
		<xs:sequence>
			<xs:any namespace="##any" processContents="lax" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LoggingType">
		<xs:sequence>
			<xs:any namespace="##local" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SignaturesType">
		<xs:sequence>
			<xs:element ref="ds:Signature" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DataType">
		<xs:choice>
			<xs:element ref="CharSequence" minOccurs="0" maxOccurs="0"/>
			<xs:element ref="Base64CharSequence">
				<xs:annotation>
					<xs:documentation>xcpt:Base64CharSequence beschränkt den Inhalt des Datencontainers auf eine xs:Base64binary-konforme Zeichenfolge, welche zuvor nach Vorgabe der PlugIns signiert und verschlüsselt wurde.
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ElementSequence" minOccurs="0" maxOccurs="0"/>
			<xs:element ref="AnyXML" minOccurs="0" maxOccurs="0"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="StatusanfrageTransportPlugInContainerType">
		<xs:sequence>
			<xs:element ref="xplg:Contacts"/>
			<xs:element ref="xplg:DataTransforms"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StatusanfragePackagePluginContainerType">
		<xs:sequence>
			<xs:element ref="xplg:DataTransforms"/>
			<xs:element ref="xplg:DataSource"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AnyPlugInContainerType">
		<xs:sequence>
			<xs:any namespace="http://www.extra-standard.de/namespace/plugins/1" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TransportRequestHeaderType">
		<xs:complexContent>
			<xs:extension base="ElementWithOutOptionalVersionType">
				<xs:sequence>
					<xs:element ref="TestIndicator"/>
					<xs:element ref="Sender"/>
					<xs:element name="Receiver" type="KomServerReceiverType">
						<xs:annotation>
							<xs:documentation>Reciever-Element, enthält Kindelemente.
</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RequestDetails" type="TransportRequestDetailsType">
						<xs:annotation>
							<xs:documentation>Das Element dient dazu, die Art des Requests genau zu bestimmen.
</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TransportResponseHeaderType">
		<xs:complexContent>
			<xs:extension base="ElementWithOutOptionalVersionType">
				<xs:sequence>
					<xs:element ref="TestIndicator"/>
					<xs:element ref="Sender"/>
					<xs:element name="Receiver" type="KomServerReceiverType">
						<xs:annotation>
							<xs:documentation>Reciever-Element, enthält Kindelemente.
</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="RequestDetails">
						<xs:annotation>
							<xs:documentation>Das Element dient dazu, die Art des Requests genau zu bestimmen.
</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ResponseDetails">
						<xs:annotation>
							<xs:documentation>Das Element beschreibt einen Response.
</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PackageRequestHeaderType">
		<xs:complexContent>
			<xs:extension base="ElementWithOptionalVersionType">
				<xs:sequence>
					<xs:element ref="TestIndicator"/>
					<xs:element ref="Sender"/>
					<xs:element ref="Receiver"/>
					<xs:element name="RequestDetails" type="PackageRequestDetailsType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TestIndicator">
		<xs:annotation>
			<xs:documentation>Mit diesem Element wird beschrieben, ob das betroffene Ebenenobjekt Test- (PROCESS) oder Produktivstatus (NONE) hat.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xcode:TestIndicatorCodeType">
				<xs:enumeration value="http://www.extra-standard.de/test/NONE"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="SenderID">
		<xs:complexType>
			<xs:simpleContent>
				<xs:restriction base="BetriebsnummerClassIDType">
					<xs:length value="8"/>
				</xs:restriction>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="RequestID">
		<xs:complexType>
			<xs:simpleContent>
				<xs:restriction base="ZeroClassifyedType">
					<xs:maxLength value="80"/>
					<xs:minLength value="1"/>
				</xs:restriction>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="ResponseID" type="ZeroClassifyedType"/>
	<xs:element name="TimeStamp" type="xs:dateTime"/>
	<xs:element name="Scenario">
		<xs:simpleType>
			<xs:restriction base="ScenarioType">
				<xs:enumeration value="http://www.extra-standard.de/scenario/request-with-acknowledgement"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Procedure">
		<xs:simpleType>
			<xs:restriction base="SimpleNameType">
				<xs:pattern value="[a-zA-Z]{3}"/>
				<xs:enumeration value="DeliveryServer"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="DataType">
		<xs:simpleType>
			<xs:restriction base="xcode:DataTypeCodeType">
				<xs:enumeration value="http://kommunikationsserver.itsg.de/quittung"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Product">
		<xs:complexType>
			<xs:simpleContent>
				<xs:restriction base="TextType">
					<xs:maxLength value="100"/>
					<xs:minLength value="1"/>
				</xs:restriction>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="Manufacturer">
		<xs:simpleType>
			<xs:restriction base="SimpleStringType">
				<xs:minLength value="1"/>
				<xs:maxLength value="100"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="RegistrationID" type="ClassifiableIDType"/>
	<xs:element name="ComponentID" type="SimpleStringType"/>
	<xs:element name="ProcessID" type="ProcessIDType"/>
	<xs:element name="Code" type="FlagCodeType"/>
	<xs:element name="Text" type="TextType"/>
	<xs:element name="Stack" type="TextType"/>
	<xs:element name="XPath" type="TextType"/>
	<xs:element name="Originator" type="TextType"/>
	<xs:element name="Application" type="ApplicationType"/>
	<xs:element name="Report" type="ReportType"/>
	<xs:element name="Flag" type="FlagType"/>
	<xs:element name="Receiver" type="ReceiverType"/>
	<xs:element name="Sender" type="SenderType">
		<xs:annotation>
			<xs:documentation>Sender-Element, enthält Kindelemente.
</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RequestDetails" type="TransportRequestDetailsType"/>
	<xs:element name="ResponseDetails" type="ResponseDetailsType"/>
	<xs:element name="AnyXML" type="AnyXMLType"/>
	<xs:element name="Base64CharSequence" type="Base64CharSequenceType"/>
	<xs:element name="CharSequence" type="CharSequenceType"/>
	<xs:element name="ElementSequence" type="ElementSequenceType"/>
	<xs:element name="Data" type="DataType">
		<xs:annotation>
			<xs:documentation>xcpt:Data ist das Wurzelement eines eXTra Datencontainers.
</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="XMLFragment" type="XMLFragmentType"/>
	<xs:element name="Property" type="PropertyType"/>
	<xs:element name="Signatures" type="SignaturesType"/>
	<!-- TransformedData
        @created 2009-05-04 MS
    -->
	<xs:element name="TransformedData" type="xplg:TransformedDataType"/>
</xs:schema>
