<?xml version="1.0" encoding="UTF-8"?>
<!--
	@author  Oliver Staudt, ITSG GmbH
    @version 1.3.0
    @state   RELEASE
    @date    2012-02-06
    @changed 2012-02-06 Profiled for GKV-Kommunikationsserver

    Schema module describing eXTra standard messages
    
    @file    eXTra-messages-1.xsd
    @author  [MS] Michael Schäfer, Statistisches Bundesamt
    @version 1.3.0
    @state   RELEASE
    @date    2011-10-18
    
    @changed 2009-10-30 1.1 MS + Added aribute 'event' to AbstractArgumentType,
                               + Added version identifier '1.1'
    @changed 2009-11-02 1.1 MS + Added attribute 'event' to PropertyType,
                               / Set attribute 'abstract' on AbstractArgumentType 
                               + Added version identifier '1.2' 
    @changed 2010-05-20 1.2 MS + Added type 'ListOfConfirmationOfReceiptType',
                               + Added element 'ListOfConfirmationOfReceipt',
                               + Added group 'ConfirmationOfReceiptModel',
                               + Added Type 'ListOfDataRequestType',
                               + Added element 'ListOfDataRequest',
                               + Added group 'DataRequestModel'
    @changed 2010-05-20 1.2 MS + Added type 'ListOfConfirmationOfReceiptType',
                               - Removed 'AbstractMessageType'
    @changed 2011-05-08 1.3 MS + Added type 'StatusRequestType',
                               + Added type 'StatusRequestArgumentType',
                               + Added type 'StatusRequestQueryType',
                               + Added type 'StatusResponseType',
                               + Added type 'ListOfStatusResponseType',
                               / Added Request* values to PropertyNamesType
                               / Renamed 'QueryType' to 'DataRequestQueryType'
                               / Set schema version to '1.3.0'
    @changed 2011-06-17 1.3 MS / Added Layer value to PropertyNamesType
    @changed 2011-08-04 1.3 MS + Added Layer value to DataRequestPropertyNamesType 
                               + Added Layer value to StatusRequestPropertyNamesType                               
                               / DataRequestType: Changed version identifier to '1.2'
    @changed 2011-10-18 1.3 MS / ListOfStatusResponseType: Corrected name of child element
                                 to be 'StatusResponse'
                               / DataRequestArgumentType: Element 'Argument' is optional
                               / StatusRequestArgumentType: Element 'Argument' is optional
                               / Extended version attributes to allow older versions.
                                 
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xmsg="http://www.extra-standard.de/namespace/message/1" xmlns="http://www.extra-standard.de/namespace/message/1" targetNamespace="http://www.extra-standard.de/namespace/message/1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.3.0">
	<!-- Abstract base types -->
	<!-- ====================
         Message: DataRequest
         ====================
    -->
	<!-- DataRequestType
         Represents a message for requesting the result of some business
         process that was triggered by a previous message
         
         @changed 2011-08-05 1.1 MS / Set version identifier to '1.2'
         
    -->
	<xs:complexType name="DataRequestType">
		<xs:sequence>
			<xs:group ref="DataRequestModel"/>
		</xs:sequence>
		<xs:attribute name="version" use="required">
			<xs:annotation>
				<xs:documentation>Wert entspricht der zugrundeliegenden eXtra-Basis Versionsnummer.
</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="1.2"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<!-- @created 2010-05-20 1.2 MS -->
	<xs:group name="DataRequestModel">
		<xs:sequence>
			<xs:element name="Query" type="DataRequestQueryType">
				<xs:annotation>
					<xs:documentation>Beschreibt eine Abfrage als ein Set von Kriterien (Element Argument). Jedes Kriterium ist mit einem Typ behaftet, spezifiziert einen oder mehrere Vergleichswerte und kann auf ein spezifisches Ereignis in einem eXTra basierten Prozess bezogen werden.
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control" type="ControlType" minOccurs="0" maxOccurs="0"/>
		</xs:sequence>
	</xs:group>
	<!-- DataRequestQueryType
        Represents a data request query that selects requested objects by certain
        criteria specified by argument elements.
        
        @changed 2011-10-18 1.3 MS / Element Argument is optional
    -->
	<xs:complexType name="DataRequestQueryType">
		<xs:sequence>
			<xs:element name="Argument" type="DataRequestArgumentType" minOccurs="0" maxOccurs="2">
				<xs:annotation>
					<xs:documentation>Ein Kriterium besteht aus einer abgefragten Eigenschaft (Attribut property), die per URI referenziert wird, und einem Werteraum, mit dem die Werte der abgefragten Objekte verglichen wird. Der Werteraum wird als Einzelwert oder als Wertebereich mit inklusiver Unter- und Obergrenze oder als Werteliste angegeben. Die wertetragenden Elemente des Werteraums bestimmen zugleich den Operator für den Vergleich mit Einzelwerten bzw. der Unter- oder Obergrenze.
</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- DataRequestArgumentType
        Defines a concrete type for arguments of a data request query, restricting
        argument names to those enumerated in  xs:string
    -->
	<xs:complexType name="DataRequestArgumentType">
		<xs:complexContent>
			<xs:extension base="AbstractArgumentType">
				<xs:attribute name="property" use="required">
					<xs:annotation>
						<xs:documentation>Bezeichnet die abgefragte Eigenschaft.
</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="DataRequestPropertyNamesType">
							<xs:enumeration value="http://www.extra-standard.de/property/ReceiverID"/>
							<xs:enumeration value="http://www.extra-standard.de/property/Procedure"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- DataRequestPropertyNamesType
        The names of the properties that may appear in a data request query.
        The names must consitute a subset (in XSD terms: a restriction) of the
        names defined in the type PropertyNamesType.
        
        @changed 2011-08-04 1.3 MS / Added Layer value to DataRequestPropertyNamesType
        
    -->
	<xs:simpleType name="DataRequestPropertyNamesType">
		<xs:restriction base="PropertyNamesType">
			<xs:pattern value="http://www.extra-standard.de/property/(SenderID|ReceiverID|Procedure|DataType|ResponseID|ResponseCreationTimeStamp|ResponseFileName|Layer)"/>
			<xs:pattern value=".+"/>
			<!--
            @deleted 2010-07-04 1.2 MS -
            @{code %
            <xs:enumeration value="http://www.extra-standard.de/property/SenderID" />
            <xs:enumeration value="http://www.extra-standard.de/property/ReceiverID" />
            <xs:enumeration value="http://www.extra-standard.de/property/Procedure" />
            <xs:enumeration value="http://www.extra-standard.de/property/DataType" />
            <xs:enumeration value="http://www.extra-standard.de/property/ResponseID" />
            <xs:enumeration value="http://www.extra-standard.de/property/ResponseCreationTimeStamp" />
            <xs:enumeration value="http://www.extra-standard.de/property/ResponseFileName" />
            <xs:enumeration value="http://www.extra-standard.de/property/Layer"/>
            -->
		</xs:restriction>
	</xs:simpleType>
	
	<!-- @created 2011-05-08 1.3 MS -->
	<!-- ============
         Common types
         ============
    -->
	<!-- AbstractArgumentType
        Defines an abstract base type for defining arguments of a query. An argument
        is bound to a named property by a property attribute which must be supplied
        by concrete types through extension. The name of the property takes the form
        of a URI. The property's type can be specified through a type attribute whose
        value references one of the XML Schema atomic types and defaults to xs:string.
         
        @changed 2009-10-30 1.1 MS + Added attribute 'event'
        @changed 2009-11-02 1.1 MS + Set attribute 'abstract' to 'true'
        @changed 2011-06-21 1.3 MS + Added element 'IN'
    -->
	<xs:complexType name="AbstractArgumentType" abstract="true">
		<xs:choice>
			<xs:element name="EQ">
				<xs:annotation>
					<xs:documentation>Enthält den Wert eines Kriteriums. Der Vergleich soll gemäß dem in xsd:Argument/@type spezifizierten Typ typgerecht erfolgen. Ein Wert erfüllt den Vergleich, wenn er als GLEICH dem Wert des Kriteriums gilt.
</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:restriction base="OperandType">
							<xs:pattern value="[0-9]{8}|[a-zA-Z]{3}"/>
						</xs:restriction>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="LE" type="OperandType" minOccurs="0" maxOccurs="0"/>
			<xs:element name="LT" type="OperandType" minOccurs="0" maxOccurs="0"/>
			<xs:sequence minOccurs="0" maxOccurs="0">
				<xs:choice>
					<xs:element name="GE" type="OperandType"/>
					<xs:element name="GT" type="OperandType"/>
				</xs:choice>
				<xs:choice minOccurs="0">
					<xs:element name="LE" type="OperandType"/>
					<xs:element name="LT" type="OperandType"/>
				</xs:choice>
			</xs:sequence>
			<xs:element name="IN" type="OperandSetType" minOccurs="0" maxOccurs="0"/>
		</xs:choice>
		<xs:attribute name="type" type="XSDPrefixedTypeCodes" default="xs:string">
			<xs:annotation>
				<xs:documentation>Der XSD Datentyp der abgefragten Eigenschaft.
</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="event" type="EventNamesType" use="prohibited"/>
	</xs:complexType>
	<!-- OperandSetType
        
        @created 2011-06-21 1.3 MS
    -->
	<xs:complexType name="OperandSetType">
		<xs:sequence>
			<xs:element name="EQ" type="OperandType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OperandType">
		<xs:simpleContent>
			<xs:extension base="xs:string"/>
		</xs:simpleContent>
	</xs:complexType>
	<!-- PropertyType
        @changed 2009-11-02 1.1 MS + Added attribute 'event'
    -->
	<xs:complexType name="PropertyType">
		<xs:sequence>
			<xs:element name="Value" type="ValueType"/>
		</xs:sequence>
		<xs:attribute name="name" type="PropertyNamesType" use="required"/>
		<xs:attribute name="type" type="XSDPrefixedTypeCodes" default="xs:string"/>
		<xs:attribute name="event" type="EventNamesType" default="http://www.extra-standard.de/event/Default"/>
	</xs:complexType>
	<!--
        @created 2009-05-05 1.0 MS 
        @changed 2010-05-20 1.2 MS + Addrd attribute 'event'
    -->
	<xs:complexType name="PropertySetType">
		<xs:sequence>
			<xs:element name="Value" type="ValueType" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="PropertyNamesType" use="required"/>
		<xs:attribute name="type" type="XSDPrefixedTypeCodes" default="xs:string"/>
		<xs:attribute name="event" type="EventNamesType"/>
	</xs:complexType>
	<!--
        @changed 2011-06-17 1.2 MS + Added value 'Layer'
    -->
	<xs:simpleType name="PropertyNamesType">
		<xs:restriction base="xs:anyURI">
			<xs:pattern value="http://www.extra-standard.de/property/(SenderID|ReceiverID|Procedure|DataType|RequestID|RequestCreationTimeStamp|RequestFileName|ResponseID|ResponseCreationTimeStamp|ResponseFileName|Layer)"/>
			<xs:pattern value=".+"/>
			<!--
            @deleted 2010-07-04 1.2 MS -
            @{code %
            <xs:enumeration value="http://www.extra-standard.de/property/SenderID" />
            <xs:enumeration value="http://www.extra-standard.de/property/ReceiverID" />
            <xs:enumeration value="http://www.extra-standard.de/property/Procedure" />
            <xs:enumeration value="http://www.extra-standard.de/property/DataType" />
            <xs:enumeration value="http://www.extra-standard.de/property/RequestID" />
            <xs:enumeration value="http://www.extra-standard.de/property/RequestCreationTimeStamp" />
            <xs:enumeration value="http://www.extra-standard.de/property/RequestFileName" />
            <xs:enumeration value="http://www.extra-standard.de/property/ResponseID" />
            <xs:enumeration value="http://www.extra-standard.de/property/ResponseCreationTimeStamp" />
            <xs:enumeration value="http://www.extra-standard.de/property/ResponseFileName" />
            <xs:enumeration value="http://www.extra-standard.de/property/Layer" />
            -->
		</xs:restriction>
	</xs:simpleType>
	<!--
        @created 2009-10-30 1.1 MS The set of predefined event names 
    -->
	<xs:simpleType name="EventNamesType">
		<xs:restriction base="xs:anyURI">
			<xs:enumeration value="http://www.extra-standard.de/event/Default"/>
			<xs:enumeration value="http://www.extra-standard.de/event/SendData"/>
			<xs:enumeration value="http://www.extra-standard.de/event/RequestData"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="ValueType">
		<xs:simpleContent>
			<xs:extension base="xs:string"/>
		</xs:simpleContent>
	</xs:complexType>
	<!-- 
         @removed 2009-07-17 MS Unused

    <xs:complexType name="AttributeType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" type="xs:NCName" use="required"/>
                <xs:attribute name="type" type="XSDPrefixedTypeCodes" default="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    -->
	<!--
        @changed 2009-07-15 MS + Added element 'MaximumSize' 
    -->
	<xs:complexType name="ControlType">
		<xs:sequence>
			<xs:element name="MaximumPackages" type="xs:positiveInteger" minOccurs="0"/>
			<xs:element name="MaximumMessages" type="xs:positiveInteger" minOccurs="0"/>
			<xs:element name="MaximumResults" type="xs:positiveInteger" minOccurs="0"/>
			<xs:element name="MaximumSize" type="SpaceSizeType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<!--
        Defines a type for specifiying (disk or memory) space size. A size specification
        consists of an integer part immediately followed by a unit identifier. The integer
        part MUST evaluate to an value > 0. The unit is identified by one of the following
        upper-case letters: B (bytes), K (kilobytes), M (megabytes) and G (gigabytes).
        
        Examples: 4096B, 512K, 16M, 2G.
        
        @created 2009-07-15 MS 
    -->
	<xs:simpleType name="SpaceSizeType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]*[1-9][0-9]*[BKMG]"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="XSDPrefixedTypeCodes">
		<xs:annotation>
			<xs:documentation> A list of prefixed XSD atomic type names </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="xs:string"/>
			<!-- Strings and names -->
			<!-- Numeric -->
			<!-- Date and time -->
			<!-- legacy types -->
			<!-- Other -->
			<!-- Undefined -->
		</xs:restriction>
	</xs:simpleType>
	<!-- Messages -->
	<!-- @created 2010-05-20 1.2 MS -->
	<xs:element name="DataRequest" type="DataRequestType">
		<xs:annotation>
			<xs:documentation>Startknoten

</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- @created 2010-05-20 1.2 MS -->
</xs:schema>
